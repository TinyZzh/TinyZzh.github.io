<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="238px" preserveAspectRatio="none" style="width:2675px;height:238px;background:#FFFFFF;" version="1.1" viewBox="0 0 2675 238" width="2675px" zoomAndPan="magnify"><defs/><g><!--MD5=[f5237f5b0f50c4f64910fa0978834f4d]
entity ##4004--><!--MD5=[951b4412ceb854bbc77f3ae930065f25]
entity ##4008--><!--MD5=[b68de4db70b592a645e296f4736b08d3]
entity ##4012--><!--MD5=[c4007c1a6e270cae144d41261e6dfec6]
class Vec--><g id="elem_Vec"><rect codeLine="28" fill="#F1F1F1" height="129.4844" id="Vec" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="234" x="7" y="93.91"/><ellipse cx="106.75" cy="109.91" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M109.7188,115.5506 Q109.1406,115.8475 108.5,115.9881 Q107.8594,116.1444 107.1563,116.1444 Q104.6563,116.1444 103.3281,114.5038 Q102.0156,112.8475 102.0156,109.7225 Q102.0156,106.5975 103.3281,104.9413 Q104.6563,103.285 107.1563,103.285 Q107.8594,103.285 108.5,103.4413 Q109.1563,103.5975 109.7188,103.8944 L109.7188,106.6131 Q109.0938,106.035 108.5,105.7694 Q107.9063,105.4881 107.2813,105.4881 Q105.9375,105.4881 105.25,106.5663 Q104.5625,107.6288 104.5625,109.7225 Q104.5625,111.8163 105.25,112.8944 Q105.9375,113.9569 107.2813,113.9569 Q107.9063,113.9569 108.5,113.6913 Q109.0938,113.41 109.7188,112.8319 L109.7188,115.5506 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="26" x="127.25" y="114.7567">Vec</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="240" y1="125.91" y2="125.91"/><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="240" y1="133.91" y2="133.91"/><ellipse cx="18" cy="147.5584" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="27" y="150.9051">push(&amp;mut self, value: T)</text><ellipse cx="18" cy="163.8553" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="27" y="167.202">pop(&amp;mut self) -&gt; Option&lt;T&gt;</text><ellipse cx="18" cy="180.1522" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="27" y="183.4989">len(&amp;self) -&gt; usize</text><ellipse cx="18" cy="196.4491" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="27" y="199.7957">capacity(&amp;self) -&gt; usize</text><ellipse cx="18" cy="212.7459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="27" y="216.0926">iter(&amp;self) -&gt; Iter&lt;T&gt;</text></g><!--MD5=[023ecf6702e3ca2ce47ae747eafb20f1]
class Iterator--><g id="elem_Iterator"><rect fill="#F1F1F1" height="48" id="Iterator" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="81" x="2587.5" y="134.41"/><ellipse cx="2602.5" cy="150.41" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2605.4688,156.0506 Q2604.8906,156.3475 2604.25,156.4881 Q2603.6094,156.6444 2602.9063,156.6444 Q2600.4063,156.6444 2599.0781,155.0038 Q2597.7656,153.3475 2597.7656,150.2225 Q2597.7656,147.0975 2599.0781,145.4413 Q2600.4063,143.785 2602.9063,143.785 Q2603.6094,143.785 2604.25,143.9413 Q2604.9063,144.0975 2605.4688,144.3944 L2605.4688,147.1131 Q2604.8438,146.535 2604.25,146.2694 Q2603.6563,145.9881 2603.0313,145.9881 Q2601.6875,145.9881 2601,147.0663 Q2600.3125,148.1288 2600.3125,150.2225 Q2600.3125,152.3163 2601,153.3944 Q2601.6875,154.4569 2603.0313,154.4569 Q2603.6563,154.4569 2604.25,154.1913 Q2604.8438,153.91 2605.4688,153.3319 L2605.4688,156.0506 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="2616.5" y="155.2567">Iterator</text><line style="stroke:#181818;stroke-width:0.5;" x1="2588.5" x2="2667.5" y1="166.41" y2="166.41"/><line style="stroke:#181818;stroke-width:0.5;" x1="2588.5" x2="2667.5" y1="174.41" y2="174.41"/></g><!--MD5=[79e5d66621f18c6525f9cf42b10cfb88]
class VecDeque--><g id="elem_VecDeque"><rect codeLine="29" fill="#F1F1F1" height="145.7813" id="VecDeque" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="274" x="276" y="85.41"/><ellipse cx="372.25" cy="101.41" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M375.2188,107.0506 Q374.6406,107.3475 374,107.4881 Q373.3594,107.6444 372.6563,107.6444 Q370.1563,107.6444 368.8281,106.0038 Q367.5156,104.3475 367.5156,101.2225 Q367.5156,98.0975 368.8281,96.4413 Q370.1563,94.785 372.6563,94.785 Q373.3594,94.785 374,94.9413 Q374.6563,95.0975 375.2188,95.3944 L375.2188,98.1131 Q374.5938,97.535 374,97.2694 Q373.4063,96.9881 372.7813,96.9881 Q371.4375,96.9881 370.75,98.0663 Q370.0625,99.1288 370.0625,101.2225 Q370.0625,103.3163 370.75,104.3944 Q371.4375,105.4569 372.7813,105.4569 Q373.4063,105.4569 374,105.1913 Q374.5938,104.91 375.2188,104.3319 L375.2188,107.0506 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="392.75" y="106.2567">VecDeque</text><line style="stroke:#181818;stroke-width:0.5;" x1="277" x2="549" y1="117.41" y2="117.41"/><line style="stroke:#181818;stroke-width:0.5;" x1="277" x2="549" y1="125.41" y2="125.41"/><ellipse cx="287" cy="139.0584" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="296" y="142.4051">push_front(&amp;mut self, value: T)</text><ellipse cx="287" cy="155.3553" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="296" y="158.702">push_back(&amp;mut self, value: T)</text><ellipse cx="287" cy="171.6522" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="296" y="174.9989">pop_front(&amp;mut self) -&gt; Option&lt;T&gt;</text><ellipse cx="287" cy="187.9491" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="296" y="191.2957">pop_back(&amp;mut self) -&gt; Option&lt;T&gt;</text><ellipse cx="287" cy="204.2459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="296" y="207.5926">len(&amp;self) -&gt; usize</text><ellipse cx="287" cy="220.5428" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="296" y="223.8895">iter(&amp;self) -&gt; Iter&lt;T&gt;</text></g><!--MD5=[a046d640d88ed63f622f54ae7bf961fb]
class LinkedList--><g id="elem_LinkedList"><rect codeLine="30" fill="#F1F1F1" height="145.7813" id="LinkedList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="274" x="585" y="85.41"/><ellipse cx="683.75" cy="101.41" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M686.7188,107.0506 Q686.1406,107.3475 685.5,107.4881 Q684.8594,107.6444 684.1563,107.6444 Q681.6563,107.6444 680.3281,106.0038 Q679.0156,104.3475 679.0156,101.2225 Q679.0156,98.0975 680.3281,96.4413 Q681.6563,94.785 684.1563,94.785 Q684.8594,94.785 685.5,94.9413 Q686.1563,95.0975 686.7188,95.3944 L686.7188,98.1131 Q686.0938,97.535 685.5,97.2694 Q684.9063,96.9881 684.2813,96.9881 Q682.9375,96.9881 682.25,98.0663 Q681.5625,99.1288 681.5625,101.2225 Q681.5625,103.3163 682.25,104.3944 Q682.9375,105.4569 684.2813,105.4569 Q684.9063,105.4569 685.5,105.1913 Q686.0938,104.91 686.7188,104.3319 L686.7188,107.0506 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="704.25" y="106.2567">LinkedList</text><line style="stroke:#181818;stroke-width:0.5;" x1="586" x2="858" y1="117.41" y2="117.41"/><line style="stroke:#181818;stroke-width:0.5;" x1="586" x2="858" y1="125.41" y2="125.41"/><ellipse cx="596" cy="139.0584" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="605" y="142.4051">push_front(&amp;mut self, value: T)</text><ellipse cx="596" cy="155.3553" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="605" y="158.702">push_back(&amp;mut self, value: T)</text><ellipse cx="596" cy="171.6522" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="605" y="174.9989">pop_front(&amp;mut self) -&gt; Option&lt;T&gt;</text><ellipse cx="596" cy="187.9491" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="248" x="605" y="191.2957">pop_back(&amp;mut self) -&gt; Option&lt;T&gt;</text><ellipse cx="596" cy="204.2459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="605" y="207.5926">len(&amp;self) -&gt; usize</text><ellipse cx="596" cy="220.5428" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="605" y="223.8895">iter(&amp;self) -&gt; Iter&lt;T&gt;</text></g><!--MD5=[702f122c79729df12a8a52022932f992]
class HashMap--><g id="elem_HashMap"><rect codeLine="51" fill="#F1F1F1" height="129.4844" id="HashMap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="358" x="894" y="93.91"/><ellipse cx="1036.75" cy="109.91" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1039.7188,115.5506 Q1039.1406,115.8475 1038.5,115.9881 Q1037.8594,116.1444 1037.1563,116.1444 Q1034.6563,116.1444 1033.3281,114.5038 Q1032.0156,112.8475 1032.0156,109.7225 Q1032.0156,106.5975 1033.3281,104.9413 Q1034.6563,103.285 1037.1563,103.285 Q1037.8594,103.285 1038.5,103.4413 Q1039.1563,103.5975 1039.7188,103.8944 L1039.7188,106.6131 Q1039.0938,106.035 1038.5,105.7694 Q1037.9063,105.4881 1037.2813,105.4881 Q1035.9375,105.4881 1035.25,106.5663 Q1034.5625,107.6288 1034.5625,109.7225 Q1034.5625,111.8163 1035.25,112.8944 Q1035.9375,113.9569 1037.2813,113.9569 Q1037.9063,113.9569 1038.5,113.6913 Q1039.0938,113.41 1039.7188,112.8319 L1039.7188,115.5506 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="1057.25" y="114.7567">HashMap</text><line style="stroke:#181818;stroke-width:0.5;" x1="895" x2="1251" y1="125.91" y2="125.91"/><line style="stroke:#181818;stroke-width:0.5;" x1="895" x2="1251" y1="133.91" y2="133.91"/><ellipse cx="905" cy="147.5584" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="332" x="914" y="150.9051">insert(&amp;mut self, key: K, value: V) -&gt; Option&lt;V&gt;</text><ellipse cx="905" cy="163.8553" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="914" y="167.202">remove(&amp;mut self, key: &amp;K) -&gt; Option&lt;V&gt;</text><ellipse cx="905" cy="180.1522" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="914" y="183.4989">get(&amp;self, key: &amp;K) -&gt; Option</text><ellipse cx="905" cy="196.4491" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="914" y="199.7957">len(&amp;self) -&gt; usize</text><ellipse cx="905" cy="212.7459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="914" y="216.0926">iter(&amp;self) -&gt; Iter&lt;K, V&gt;</text></g><!--MD5=[d2462e24b4505812997a0225b58b8937]
class BTreeMap--><g id="elem_BTreeMap"><rect codeLine="52" fill="#F1F1F1" height="129.4844" id="BTreeMap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="358" x="1287" y="93.91"/><ellipse cx="1426.25" cy="109.91" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1429.2188,115.5506 Q1428.6406,115.8475 1428,115.9881 Q1427.3594,116.1444 1426.6563,116.1444 Q1424.1563,116.1444 1422.8281,114.5038 Q1421.5156,112.8475 1421.5156,109.7225 Q1421.5156,106.5975 1422.8281,104.9413 Q1424.1563,103.285 1426.6563,103.285 Q1427.3594,103.285 1428,103.4413 Q1428.6563,103.5975 1429.2188,103.8944 L1429.2188,106.6131 Q1428.5938,106.035 1428,105.7694 Q1427.4063,105.4881 1426.7813,105.4881 Q1425.4375,105.4881 1424.75,106.5663 Q1424.0625,107.6288 1424.0625,109.7225 Q1424.0625,111.8163 1424.75,112.8944 Q1425.4375,113.9569 1426.7813,113.9569 Q1427.4063,113.9569 1428,113.6913 Q1428.5938,113.41 1429.2188,112.8319 L1429.2188,115.5506 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1446.75" y="114.7567">BTreeMap</text><line style="stroke:#181818;stroke-width:0.5;" x1="1288" x2="1644" y1="125.91" y2="125.91"/><line style="stroke:#181818;stroke-width:0.5;" x1="1288" x2="1644" y1="133.91" y2="133.91"/><ellipse cx="1298" cy="147.5584" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="332" x="1307" y="150.9051">insert(&amp;mut self, key: K, value: V) -&gt; Option&lt;V&gt;</text><ellipse cx="1298" cy="163.8553" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="1307" y="167.202">remove(&amp;mut self, key: &amp;K) -&gt; Option&lt;V&gt;</text><ellipse cx="1298" cy="180.1522" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="1307" y="183.4989">get(&amp;self, key: &amp;K) -&gt; Option</text><ellipse cx="1298" cy="196.4491" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1307" y="199.7957">len(&amp;self) -&gt; usize</text><ellipse cx="1298" cy="212.7459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="1307" y="216.0926">iter(&amp;self) -&gt; Iter&lt;K, V&gt;</text></g><!--MD5=[081e18de64b05ec8ae686bcc1669da5e]
class HashSet--><g id="elem_HashSet"><rect codeLine="72" fill="#F1F1F1" height="129.4844" id="HashSet" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="284" x="1680" y="93.91"/><ellipse cx="1788.75" cy="109.91" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1791.7188,115.5506 Q1791.1406,115.8475 1790.5,115.9881 Q1789.8594,116.1444 1789.1563,116.1444 Q1786.6563,116.1444 1785.3281,114.5038 Q1784.0156,112.8475 1784.0156,109.7225 Q1784.0156,106.5975 1785.3281,104.9413 Q1786.6563,103.285 1789.1563,103.285 Q1789.8594,103.285 1790.5,103.4413 Q1791.1563,103.5975 1791.7188,103.8944 L1791.7188,106.6131 Q1791.0938,106.035 1790.5,105.7694 Q1789.9063,105.4881 1789.2813,105.4881 Q1787.9375,105.4881 1787.25,106.5663 Q1786.5625,107.6288 1786.5625,109.7225 Q1786.5625,111.8163 1787.25,112.8944 Q1787.9375,113.9569 1789.2813,113.9569 Q1789.9063,113.9569 1790.5,113.6913 Q1791.0938,113.41 1791.7188,112.8319 L1791.7188,115.5506 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="1809.25" y="114.7567">HashSet</text><line style="stroke:#181818;stroke-width:0.5;" x1="1681" x2="1963" y1="125.91" y2="125.91"/><line style="stroke:#181818;stroke-width:0.5;" x1="1681" x2="1963" y1="133.91" y2="133.91"/><ellipse cx="1691" cy="147.5584" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="1700" y="150.9051">insert(&amp;mut self, value: T) -&gt; bool</text><ellipse cx="1691" cy="163.8553" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="1700" y="167.202">remove(&amp;mut self, value: &amp;T) -&gt; bool</text><ellipse cx="1691" cy="180.1522" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="1700" y="183.4989">contains(&amp;self, value: &amp;T) -&gt; bool</text><ellipse cx="1691" cy="196.4491" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1700" y="199.7957">len(&amp;self) -&gt; usize</text><ellipse cx="1691" cy="212.7459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="1700" y="216.0926">iter(&amp;self) -&gt; Iter&lt;T&gt;</text></g><!--MD5=[62bd7ca902dae1d90d78917a7baa94ee]
class BTreeSet--><g id="elem_BTreeSet"><rect codeLine="73" fill="#F1F1F1" height="129.4844" id="BTreeSet" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="284" x="1999" y="93.91"/><ellipse cx="2104.25" cy="109.91" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2107.2188,115.5506 Q2106.6406,115.8475 2106,115.9881 Q2105.3594,116.1444 2104.6563,116.1444 Q2102.1563,116.1444 2100.8281,114.5038 Q2099.5156,112.8475 2099.5156,109.7225 Q2099.5156,106.5975 2100.8281,104.9413 Q2102.1563,103.285 2104.6563,103.285 Q2105.3594,103.285 2106,103.4413 Q2106.6563,103.5975 2107.2188,103.8944 L2107.2188,106.6131 Q2106.5938,106.035 2106,105.7694 Q2105.4063,105.4881 2104.7813,105.4881 Q2103.4375,105.4881 2102.75,106.5663 Q2102.0625,107.6288 2102.0625,109.7225 Q2102.0625,111.8163 2102.75,112.8944 Q2103.4375,113.9569 2104.7813,113.9569 Q2105.4063,113.9569 2106,113.6913 Q2106.5938,113.41 2107.2188,112.8319 L2107.2188,115.5506 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="2124.75" y="114.7567">BTreeSet</text><line style="stroke:#181818;stroke-width:0.5;" x1="2000" x2="2282" y1="125.91" y2="125.91"/><line style="stroke:#181818;stroke-width:0.5;" x1="2000" x2="2282" y1="133.91" y2="133.91"/><ellipse cx="2010" cy="147.5584" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="2019" y="150.9051">insert(&amp;mut self, value: T) -&gt; bool</text><ellipse cx="2010" cy="163.8553" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="2019" y="167.202">remove(&amp;mut self, value: &amp;T) -&gt; bool</text><ellipse cx="2010" cy="180.1522" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="2019" y="183.4989">contains(&amp;self, value: &amp;T) -&gt; bool</text><ellipse cx="2010" cy="196.4491" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="2019" y="199.7957">len(&amp;self) -&gt; usize</text><ellipse cx="2010" cy="212.7459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="2019" y="216.0926">iter(&amp;self) -&gt; Iter&lt;T&gt;</text></g><!--MD5=[f267648d201f99056ef93249ff3799b5]
class BinaryHeap--><g id="elem_BinaryHeap"><rect codeLine="76" fill="#F1F1F1" height="113.1875" id="BinaryHeap" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="234" x="2318" y="101.91"/><ellipse cx="2391.75" cy="117.91" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2394.7188,123.5506 Q2394.1406,123.8475 2393.5,123.9881 Q2392.8594,124.1444 2392.1563,124.1444 Q2389.6563,124.1444 2388.3281,122.5038 Q2387.0156,120.8475 2387.0156,117.7225 Q2387.0156,114.5975 2388.3281,112.9413 Q2389.6563,111.285 2392.1563,111.285 Q2392.8594,111.285 2393.5,111.4413 Q2394.1563,111.5975 2394.7188,111.8944 L2394.7188,114.6131 Q2394.0938,114.035 2393.5,113.7694 Q2392.9063,113.4881 2392.2813,113.4881 Q2390.9375,113.4881 2390.25,114.5663 Q2389.5625,115.6288 2389.5625,117.7225 Q2389.5625,119.8163 2390.25,120.8944 Q2390.9375,121.9569 2392.2813,121.9569 Q2392.9063,121.9569 2393.5,121.6913 Q2394.0938,121.41 2394.7188,120.8319 L2394.7188,123.5506 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="2412.25" y="122.7567">BinaryHeap</text><line style="stroke:#181818;stroke-width:0.5;" x1="2319" x2="2551" y1="133.91" y2="133.91"/><line style="stroke:#181818;stroke-width:0.5;" x1="2319" x2="2551" y1="141.91" y2="141.91"/><ellipse cx="2329" cy="155.5584" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="2338" y="158.9051">push(&amp;mut self, value: T)</text><ellipse cx="2329" cy="171.8553" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="2338" y="175.202">pop(&amp;mut self) -&gt; Option&lt;T&gt;</text><ellipse cx="2329" cy="188.1522" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="2338" y="191.4989">len(&amp;self) -&gt; usize</text><ellipse cx="2329" cy="204.4491" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="2338" y="207.7957">iter(&amp;self) -&gt; Iter&lt;T&gt;</text></g><!--MD5=[8d4dc370fcb0bcc0d17d44190b70edb2]
link Vec to Iterator--><g id="link_Vec_Iterator"><path codeLine="8" d="M200.88,93.65 C223.8,78.05 249.92,63.54 276.5,55.41 C336.95,36.91 2496.11,26.83 2552.5,55.41 C2582.72,70.73 2603.76,104.46 2615.82,129.16 " fill="none" id="Vec-to-Iterator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2618.11,133.98,2617.8641,124.1342,2615.9659,129.4631,2610.637,127.5648,2618.11,133.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[547545d4672c06a9b5d5a7604bf8e32d]
link VecDeque to Iterator--><g id="link_VecDeque_Iterator"><path codeLine="84" d="M515.19,85.36 C537.39,73 561.46,62.04 585.5,55.41 C690.84,26.35 2455.03,6 2552.5,55.41 C2582.72,70.73 2603.76,104.46 2615.82,129.16 " fill="none" id="VecDeque-to-Iterator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2618.11,133.98,2617.8641,124.1342,2615.9659,129.4631,2610.637,127.5648,2618.11,133.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ec3ed9d0c823207531af697675b4dc11]
link LinkedList to Iterator--><g id="link_LinkedList_Iterator"><path codeLine="85" d="M824.19,85.36 C846.39,73 870.46,62.04 894.5,55.41 C983.3,30.92 2470.34,13.77 2552.5,55.41 C2582.72,70.73 2603.76,104.46 2615.82,129.16 " fill="none" id="LinkedList-to-Iterator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2618.11,133.98,2617.8641,124.1342,2615.9659,129.4631,2610.637,127.5648,2618.11,133.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[a9088c95d6d5d809fe8c913725e790cd]
link HashMap to Iterator--><g id="link_HashMap_Iterator"><path codeLine="86" d="M1183.37,93.85 C1215.84,78.09 1252.15,63.46 1287.5,55.41 C1356.02,39.81 2489.81,23.64 2552.5,55.41 C2582.72,70.73 2603.76,104.46 2615.82,129.16 " fill="none" id="HashMap-to-Iterator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2618.11,133.98,2617.8641,124.1342,2615.9659,129.4631,2610.637,127.5648,2618.11,133.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[ef68f177ab7444d7c580f8bf03c18f47]
link BTreeMap to Iterator--><g id="link_BTreeMap_Iterator"><path codeLine="87" d="M1576.37,93.85 C1608.84,78.09 1645.15,63.46 1680.5,55.41 C1774.97,33.9 2466.08,11.61 2552.5,55.41 C2582.72,70.73 2603.76,104.46 2615.82,129.16 " fill="none" id="BTreeMap-to-Iterator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2618.11,133.98,2617.8641,124.1342,2615.9659,129.4631,2610.637,127.5648,2618.11,133.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[68b1e15bd9c77cf790c1fb8d4c369b65]
link HashSet to Iterator--><g id="link_HashSet_Iterator"><path codeLine="88" d="M1912.34,93.81 C1939.13,78.11 1969.4,63.51 1999.5,55.41 C2058.83,39.44 2497.69,27.63 2552.5,55.41 C2582.72,70.73 2603.76,104.46 2615.82,129.16 " fill="none" id="HashSet-to-Iterator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2618.11,133.98,2617.8641,124.1342,2615.9659,129.4631,2610.637,127.5648,2618.11,133.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[58b9d83eac36e6060405d5f16f263598]
link BTreeSet to Iterator--><g id="link_BTreeSet_Iterator"><path codeLine="89" d="M2231.34,93.81 C2258.13,78.11 2288.4,63.51 2318.5,55.41 C2418.93,28.38 2459.74,8.39 2552.5,55.41 C2582.72,70.73 2603.76,104.46 2615.82,129.16 " fill="none" id="BTreeSet-to-Iterator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2618.11,133.98,2617.8641,124.1342,2615.9659,129.4631,2610.637,127.5648,2618.11,133.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1e3ab513e0726b770bc19e1684c19e02]
link BinaryHeap to Iterator--><g id="link_BinaryHeap_Iterator"><path codeLine="90" d="M2552.23,158.41 C2562.23,158.41 2572.23,158.41 2582.22,158.41 " fill="none" id="BinaryHeap-to-Iterator" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2587.45,158.41,2578.45,154.41,2582.45,158.41,2578.45,162.41,2587.45,158.41" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[40af97e39a553b175c45d82230dd64bd]
@startuml
class Vec {
  + push(&mut self, value: T)
  + pop(&mut self) -> Option<T>
  + len(&self) -> usize
  + capacity(&self) -> usize
  + iter(&self) -> Iter<T>
}
Vec -> Iterator

class VecDeque {
  + push_front(&mut self, value: T)
  + push_back(&mut self, value: T)
  + pop_front(&mut self) -> Option<T>
  + pop_back(&mut self) -> Option<T>
  + len(&self) -> usize
  + iter(&self) -> Iter<T>
}

class LinkedList {
  + push_front(&mut self, value: T)
  + push_back(&mut self, value: T)
  + pop_front(&mut self) -> Option<T>
  + pop_back(&mut self) -> Option<T>
  + len(&self) -> usize
  + iter(&self) -> Iter<T>
}
together {
  class Vec
  class VecDeque
  class LinkedList
}


class HashMap {
  + insert(&mut self, key: K, value: V) -> Option<V>
  + remove(&mut self, key: &K) -> Option<V>
  + get(&self, key: &K) -> Option<&V>
  + len(&self) -> usize
  + iter(&self) -> Iter<K, V>
}

class BTreeMap {
  + insert(&mut self, key: K, value: V) -> Option<V>
  + remove(&mut self, key: &K) -> Option<V>
  + get(&self, key: &K) -> Option<&V>
  + len(&self) -> usize
  + iter(&self) -> Iter<K, V>
}

together {
  class HashMap
  class BTreeMap
}

class HashSet {
  + insert(&mut self, value: T) -> bool
  + remove(&mut self, value: &T) -> bool
  + contains(&self, value: &T) -> bool
  + len(&self) -> usize
  + iter(&self) -> Iter<T>
}

class BTreeSet {
  + insert(&mut self, value: T) -> bool
  + remove(&mut self, value: &T) -> bool
  + contains(&self, value: &T) -> bool
  + len(&self) -> usize
  + iter(&self) -> Iter<T>
}

together {
  class HashSet
  class BTreeSet
}

class BinaryHeap {
  + push(&mut self, value: T)
  + pop(&mut self) -> Option<T>
  + len(&self) -> usize
  + iter(&self) -> Iter<T>
}


VecDeque -> Iterator
LinkedList -> Iterator
HashMap -> Iterator
BTreeMap -> Iterator
HashSet -> Iterator
BTreeSet -> Iterator
BinaryHeap -> Iterator
@enduml

PlantUML version 1.2022.7(Mon Aug 22 17:01:30 UTC 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>